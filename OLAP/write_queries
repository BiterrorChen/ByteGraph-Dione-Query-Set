// Insert a vertex
1. g.addV().property("id", id).property("type", type)
        .property("p0", val0)
        .property("p1", val1)
        .property("p2", val2)
        .property("p3", val3)
        .property("p4", val4)
        .property("p5", val5)
        .property("p6", val6)

// Insert an edge
2. g.addE(TYPE).from(id1, type1)
        .to(id2, type2)
        .property("p0", val0)
        .property("p1", val1)
        .property("p2", val2)
        .property("p3", val3)
        .property("p4", val4)

// Modify the properties of a vertex
3. g.V().has("id", id).has("type", type)
        .property("p0", val0)
        .property("p1", val1)
        .property("p2", val2)

// Delete the properties of a vertex
4. g.V().has("id", id).has("type", type).
        .properties("p0", "p1", "p2")
        .drop()

// Modify the properties of an edge\
5. g.V().has("id", id).has("type", type)
        .outE(TYPE)
        .where(otherV().has("id", id).has("type", type))
        .property("p0", val0)
        .property("p1", val1)
        .property("p2", val2)
        .property("p3", val3)

// Modify properties of all out-going edges
6. g.V().has("id", id).has("type", type)
        .outE(TYPE)
        .property("p0", val0)
        .property("p1", val1)
        .property("p2", val2)

// Delete the properties of an edge
7. g.V().has("id", id).has("type", type)
        .outE(TYPE)
        .where(otherV().has("id", id).has("type", type))
        .properties("p0", "p1")
        .drop()

// Delete all properties of out-going edges
8. g.V().has("id", id).has("type", type)
        .outE(TYPE)
        .properties("p0", "p1")
        .drop()

// Delete an edge
9. g.V().has("id", id).has("type", type)
        .outE(TYPE)
        .where(otherV().has("id", id).has("type", type)
        .drop()

// Delete all out-going edges
10. g.V().has("id", id).has("type", type).
        .outE("knows")
        .drop()
