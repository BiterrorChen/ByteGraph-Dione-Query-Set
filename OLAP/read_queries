1. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .outE(TYPE)
2. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .outE(TYPE)
        .withProperties("p0", "p1", "p2")
3. g.V().has("id", id).has("type", type)
        .outE(TYPE)
        .store(LABEL)
        .otherV()
        .outE(TYPE)
        .store(LABEL)
        .cap(LABEL).Unfold()
        .Dedup()
4. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .project("p0", "p1")
        .by(values(p0))
        .by(in(TYPE).count())
5. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .where(out(TYPE).count().lt(N))
6. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .outE(TYPE)
        .withProperties("p0", "p1", "p2")
        .order().by(p3)
7. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .limit(N)
        .outE(TYPE)
        .limit(N)
        .withProperties("p0", "p1", "p2")
        .order().by(p3)
8. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .out(TYPE)
        .withProperties("p0", "p1", "p2")
        .order().by(p3)
9. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .limit(N)
        .out(TYPE)
        .limit(N)
        .withProperties("p0", "p1", "p2")
        .order().by(p3)
10. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .where(
                in(TYPE).has("id", id).has("type", type)
        )
11. g.V().has("id", id).has("type", type)
        .out(TYPE)
        .withProperties("p0", "p1", "p2")
        .where(in(TYPE).has("id", id).has("type", type))
12. g.V().has("id", id).has("type", type)
        .Repeat(out(TYPE))
        .Emit()
        .Time(2)
        .Dedup()
13. g.V().has("id", id).has("type", type)
        .Repeat(out(TYPE).withProperties("p0", "p1", "p2"))
        .Emit()
        .Times(2)
        .Dedup()
        .Order().By(p3)
14. g.V().has("id", id).has("type", type).out(TYPE).limit(N1)
        .where(
                in(TYPE).count(global).is(P.lt(N2))
        ).local(
                in(TYPE).limit(N3)
        ).where(
                in(TYPE).count(global).is(P.lt(N4))
        ).path()
15. g.V().has("id", id).has("type", type)
        .Double(TYPE).limit(N)
        .local(
                out(TYPE).has("id", without(N2)).limit(N3)
        )
16. g.V().has("id", id).has("type", type)
        .Double(TYPE).limit(N1)
        .out(TYPE).limit(N2)
        .group().by(p0).by(p1).by(Count())
17. g.V().has("id", id).has("type", type)
        .Repeat(out(TYPE).SimplePath())
        .Time(N)
        .Path()
18. g.V().has("id", id).has("type", type)
        .Repeat(out(TYPE).SimplePath())
        .Emit(has("id", id).has("type", type))
        .Times(N)
        .Path()
19. g.V().has("id", id).has("type", type).Repeat(out(TYPE).where(without(LABEL)).store(LABEL))
        .Until(
                or(g.V().has("id", id).has("type", type)
                .where(withloops().is(gt(N))
        )
        .Path()
